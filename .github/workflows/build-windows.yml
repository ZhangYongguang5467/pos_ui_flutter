name: Build Windows Application

on:
  push:
    branches: [ main, shorebird ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.8'
        channel: 'stable'
    
    - name: Setup Shorebird CLI
      run: |
        curl -sL https://raw.githubusercontent.com/shorebirdtech/install/main/install.sh | bash
        echo "$HOME/.shorebird/bin" >> $GITHUB_PATH
      shell: bash
    
    - name: Set Shorebird Token
      run: echo "SHOREBIRD_TOKEN=${{ secrets.SHOREBIRD_TOKEN }}" >> $GITHUB_ENV
      shell: bash
    
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
    
    - name: Get dependencies
      run: flutter pub get
    
    - name: Build Windows with Shorebird (Release)
      run: shorebird release windows --force
    
    - name: List build outputs
      shell: pwsh
      run: |
        Write-Host "Listing build/windows:"
        if (Test-Path build/windows) {
          Get-ChildItem -Recurse build/windows | ForEach-Object { $_.FullName }
        } else {
          Write-Host "build/windows does not exist"
        }
    
    - name: Find Shorebird Release directory
      id: find_release
      shell: pwsh
      run: |
        $candidates = @(
          "build/windows/x64/runner/Release",
          "build/windows/runner/Release"
        )
        $found = $false
        foreach ($p in $candidates) {
          if (Test-Path $p) {
            Write-Host "Found release dir: $p"
            "release_dir=$p" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
            $found = $true
            break
          }
        }
        if (-not $found) {
          Write-Error "Release directory not found."
          exit 1
        }
    
    - name: Zip artifact
      shell: pwsh
      run: |
        $src = "${{ steps.find_release.outputs.release_dir }}"
        $zip = "windows-build.zip"
        Write-Host "Zipping $src to $zip"
        if (Test-Path $zip) { Remove-Item $zip -Force }
        Compress-Archive -Path "$src/*" -DestinationPath $zip
        Write-Host "Done."
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: windows-build.zip
        retention-days: 30 